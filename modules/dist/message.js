// Generated by CoffeeScript 2.0.0-beta4
// Message

// 訊息。
var Message;

Message = (function() {
  class Message {
    constructor() {
      // 元素初始化函式。
      this.init = this.init.bind(this);
      // 元素摧毀函式。
      this.destroy = this.destroy.bind(this);
      // 模組可用的方法。
      this.methods = this.methods.bind(this);
    }

    init() {
      // 監聽關閉按鈕的點擊事件。
      this.$this.find(this.selector.CLOSE_BUTTON).on('click.message', () => {
        var ref;
        if ((ref = this.$this.data('onClose')) != null) {
          ref.call(this.$this.get());
        }
        return this.$this.addClass(this.className.HIDDEN);
      });
      return ts.fn;
    }

    destroy() {
      return this.$this.find(this.selector.CLOSE_BUTTON).off('click.message');
    }

    methods() {
      return {
        // Show

        // 顯示訊息。
        show: () => {
          this.$this.removeClass(this.className.HIDDEN);
          return ts.fn;
        },
        // Hide

        // 隱藏訊息。
        hide: () => {
          this.$this.addClass(this.className.HIDDEN);
          return ts.fn;
        },
        // Toggle

        // 切換訊息。
        toggle: () => {
          this.$this.toggleClass(this.className.HIDDEN);
          return ts.fn;
        },
        // Is Hidden

        // 回傳一個表示訊息是否正在隱藏狀態的布林值。
        'is hidden': () => {
          return this.$this.hasClass(this.className.HIDDEN);
        },
        // Is Visible

        // 回傳一個表示訊息是否正在顯示中的布林值。
        'is visible': () => {
          return !this.$this.hasClass(this.className.HIDDEN);
        }
      };
    }

  };

  // 模組名稱。
  Message.module = 'message';

  // 模組屬性。
  Message.prototype.props = {
    // 當訊息被關閉時所呼叫的回呼函式。
    onClose: function() {}
  };

  // 類別樣式名稱。
  Message.prototype.className = {
    HIDDEN: 'hidden'
  };

  // 選擇器名稱。
  Message.prototype.selector = {
    CLOSE_BUTTON: '.ts.close.button'
  };

  return Message;

})();

ts(Message);
