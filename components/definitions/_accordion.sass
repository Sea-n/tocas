@charset "UTF-8"
@import ../variables/accordion.variables

//*******************************//
//              Main
//*******************************//

.ts.accordion
    color: $accordion_textColor

//-------------------//
//      Inverted
//-------------------//

.ts.accordion.-inverted
    color: $accordion_invertedTextColor

//-------------------//
//      Summary
//-------------------//

.ts.accordion .title,
details summary
    +extend(no-select)

    cursor : pointer
    padding: $accordion_summaryPadding

.ts.accordion .title:hover,
details summary:hover
    opacity: $accordion_summaryHoverOpacity

.ts.accordion .title:active,
details summary:active
    opacity: $accordion_summaryActiveOpacity

//-------------------//
//      Content
//-------------------//

.ts.accordion .content
    overflow  : hidden
    transition: $accordion_contentTransition

.ts.accordion .title ~ .content:not(.-active)
    display: none !important

//-------------------//
//       Icon
//-------------------//

.ts.accordion .title .dropdown.icon
    //transition: $accordion_iconTransition

.ts.accordion .title:not(.-active) .dropdown.icon,
details:not([open]) summary .dropdown.icon
    transform: rotate(-90deg)

//-------------------//
//     Segmented
//-------------------//

.ts.accordion.-segmented
    border       : $accordion_segmentedBorder
    border-radius: $accordion_segmentedBorderRadius
    box-shadow   : $accordion_segmentedBoxShadow

.ts.accordion.-segmented .title
    color      : $accordion_segmentedTitleTextColor
    opacity    : 1
    font-weight: $accordion_segmentedTitleFontWeight

.ts.accordion.-segmented .title:hover
    color: $accordion_segmentedTitleHoverTextColor

.ts.accordion.-segmented .title.active:hover
    opacity: 1

.ts.accordion.-segmented .content,
.ts.accordion.-segmented .title
    border-top: $accordion_segmentedBorder
    padding   : $accordion_segmentedPadding

.ts.accordion.-segmented .title.-active
    color: $accordion_segmentedActiveTitleTextColor

.ts.accordion.-segmented .-active.content,
.ts.accordion.-segmented .title:first-child
    border-top: 0

.ts.accordion.segmented .active.title + .active.content
    padding-top: 0

//-------------------//
//      Attached
//-------------------//

.ts.-attached.-segmented.accordion
    box-shadow: $accordion_segmentedTopAttachedBoxShadow

.ts.-top-attached.-segmented.accordion
    +extend(top-attached)

.ts.-segmented.accordion.-attached
    +extend(attached)

.ts.-segmented.accordion.-bottom-attached
    +extend(bottom-attached)

    box-shadow: $accordion_segmentedBottomAttachedBoxShadow

//-------------------//
//  Accordion Field
//-------------------//

.ts.accordion.field .title
    padding: 0

.ts.accordion.field .title.-active
    padding-bottom: $accordion_fieldPaddingBottom

//-------------------//
//     Coupling
//-------------------//

.ts.accordion.menu .title
    color  : $accordion_menuTitleTextColor
    display: block

.ts.accordion.menu .title.header.header.header.header
    margin-bottom: 0

.ts.accordion.menu .item .content .menu
    margin-top: 0

.ts.accordion.menu .title i.dropdown.icon
    float    : right
    transform: rotate(90deg)

.ts.accordion.menu .title.-active i.dropdown.icon
    transform: rotate(0deg)

.ts.menu details.ts.accordion
    margin-top   : -#{$accordion_menuContentOffset}
    margin-bottom: -#{$accordion_menuContentOffset}

.ts.menu details.ts.accordion .content
    margin-top   : $accordion_menuContentOffset
    margin-bottom: $accordion_menuContentOffset

.ts.menu:not(.-left-aligned) details.ts.accordion i.dropdown.icon
    float: right

.ts.menu:not(.-left-aligned) details.ts.accordion:not([open]) i.dropdown.icon
    transform: rotate(90deg)
