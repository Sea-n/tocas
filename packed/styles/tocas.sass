@use "sass:map"
@import ./colors
@import ./variables
@import ./extends

html
    font-size: 16px






// ==========================================================================
// Export
// ==========================================================================

//
@each $emphasis, $map in $emphasises
    $emphasises: map.set($emphasises, $emphasis, map-merge($map, ("colors": get-scheme($emphasis))))

//
@each $theme, $_ in $emphasises
    $colors: map-get(map-get($emphasises, $theme), "colors")

    @each $scheme, $weights in $colors
        //
        @at-root :root
            @each $weight, $color in $weights
                --ts-#{$scheme}_#{$theme}_#{$weight}: #{$color}

        //
        [data-scheme="#{$scheme}"]
            @if $theme == "gray"
                //
                @each $weight, $color in $weights
                    --ts-static_#{$theme}_#{$weight}: #{$color}

                //
                @each $weight, $color in $weights
                    --ts-#{$theme}_#{$weight} : #{$color}

                @each $weight, $color in $weights
                    --ts-#{$theme}-shadow_#{$weight} : #{rgba($color, 0.5)}

            @else
                //
                @each $weight, $color in $weights
                    --ts-#{$theme}_#{$weight} : #{$color}

                //
                @each $weight, $color in $weights
                    --ts-foreground_#{$weight}: #{get-color(gray, $weight)}

                //
                @each $weight, $color in $weights
                    --ts-emphazied_#{$weight} : #{get-color($theme, $weight)}

                //
                .-quiet
                    //
                    @each $weight, $color in $weights
                        $foreground: get-real-color($scheme, $theme, $weight)

                        @if ($scheme == "dark" or $scheme == "darkest")
                            --ts-foreground_#{$theme}_#{$weight}: #{tint($foreground, 20%)}
                            //--ts-foreground_#{$theme}_#{$weight}: #{$foreground};
                        @else
                            --ts-foreground_#{$theme}_#{$weight}: #{$foreground}

                    //
                    @each $weight, $color in $weights
                        $background: get-real-color($scheme, $theme, $weight)

                        @if ($scheme == "dark" or $scheme == "darkest")
                            --ts-#{$theme}_#{$weight}: #{shade($background, 40%)}
                        @else
                            --ts-#{$theme}_#{$weight}: #{tint($background, 73%)}

                    //
                    &[data-emphasis="#{$theme}"]
                        @each $weight, $color in $weights
                            --ts-foreground_#{$weight}: var(--ts-foreground_#{$theme}_#{$weight})

                //
                @each $weight, $color in $weights
                    $foreground                         : get-real-color(if(is-light($theme), "dark", "light"), "gray", $weight)
                    --ts-foreground_#{$theme}_#{$weight}: #{if(is-light($theme), tint($foreground, 80%), shade($foreground, 30%))}

                //
                [data-emphasis="#{$theme}"].-inverted
                    @each $weight, $color in $weights
                        --ts-foreground_#{$weight}: var(#{--ts-foreground_#{$theme}_#{$weight}})

                //
                [data-emphasis="#{$theme}"].-inverted,
                [data-emphasis="#{$theme}"].-outlined,
                [data-emphasis="#{$theme}"].-quiet
                    @each $weight, $color in $weights
                        --ts-gray_#{$weight}: #{get-foreground-color($theme, $weight)}