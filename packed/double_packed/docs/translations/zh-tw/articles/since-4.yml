#=======================================================
# 標頭
# Header
#=======================================================

Title      : Tocas 4 重大改變事項
Description:

#=======================================================
# 設定
# Settings
#=======================================================

Type: Article

#=======================================================
# 章節
# Sections
#=======================================================

Sections:

    -   Title      : 元件間隔
        Anchor     : Header
        Description: |
            除了群組的元件以外，現在元件預設都不會有空白間距。

            首先是因為元件之間有些是不可見的元素，但這在 CSS 中會被認為是與某個元件有交集而產生一個多餘的空白間距，

            其次是因為元件之間有不同的間距，而這會導致整個介面看起來十分零散且不整齊。

            為了解決這個問題，Tocas 4 新增了一個空白（Space）元件可以多加利用並安插在元件之間統一其間距。

    -   Title      : 移除附著的（Attached）樣式
        Anchor     : Header
        Description: |
            任何元件都不再有附著的（Attached）樣式能夠讓元件之間相互吸附彼此的邊緣。

            這是因為不同的元件擁有不同的寬度而導致附著同時，上方的元件可能遠比下方的附著元件要來的寬更多。

            雖然這個問題能夠以容器包覆並以 JavaScript 均等寬度來解決，但這將令整個手續過於繁雜而作罷。

            也正因為元件現在相互明確地分開，這也令設計和視覺呈現上顯得更寬敞。

    -   Title      : 寬鬆設定
        Anchor     : Header
        Description: |
            所有的元件現在都有 `density` 的密度設定可以能夠調整其內距以便符合不同的應用場景，

            如一個較小的表單其輸入欄位可以用上 `compact`（緊緻的），

            而對於電腦使用者來說則可以套用 `relaxed`（寬鬆的）能夠令使用者在閱讀或互動上更為容易。

    -   Title      : 深度設定
        Anchor     : Header
        Description: |
            在以往的 Tocas 版本稱之為 `raised` 抬舉的，這在希望製造元件陰影時十分有用，但有些時候會希望元件擁有不同的權重，猶如語意那樣。

            因此不同的重要程度就應該呈現不同的陰影比重，對此 Tocas 4 的解決方法則是移除所有 `raised` 用法，並且以新的 `depth` 屬性代替。

    -   Title      : 去群組化
        Anchor     : Header
        Description: |
            按鈕、卡片群組因為各自的邏輯與網格系統相互重複變得不易管理，因此移除原先舊有的 `cards` 與 `buttons` 群組功能。

            欲要進行排版，則可以使用更為強大的網格系統。

    -   Title      : 原子化元件
        Anchor     : Header
        Description: |
            元件之間現在被拆的更小了，例如：如果希望元件之間有空白間距，則應使用空白元件包覆；若希望卡片裡有標題，則使用標題元件而非像以往的 Tocas 那樣直接指定 `class="header"`。

    -   Title      : 大小尺寸數量
        Anchor     : Header
        Description: |
            元件的尺寸原先有八項：`mini`、`tiny`、`small`、`medium`、`large`、`big`、`huge`、`massive`，

            但基於瀏覽器與系統的強制規定：任何字體都無法小於 12px。這導致 `mini` 與 `tiny` 在某些場合和 `small` 近乎無異，

            而 `massive` 和 `huge` 也因為過大而應用的場景十分稀少。為了解決這個問題，現在的尺寸被縮減至三項：`small`、`medium`、`large`，

            但針對某些元素需要更多的選項而言，如：圖片、標題，仍會有額外的階級尺寸。

    -   Title      : 介面大小
        Anchor     : Header
        Description: |
            透過指定 `html` 標籤的 `data-size` 屬性，現在能夠以 `14px` 至 `16px` 隨時變更基本字體大小，

            這同時會影響到整個介面格局的大小設定，你可以在不同裝置上有不同的大小設定以呈現更好的閱讀體驗。

    -   Title      : 色系亮度
        Anchor     : Header
        Description: |
            現在能夠於 `html` 標籤指定 `data-scheme` 並有四個不同的色系亮度，分別為：`lightest`、`light`、`dark`、`darkest`。

            這個設定會影響所有色彩的基本色調，假設色系亮度為最亮（Lightest）某些原本為淡灰色的區塊會在這個情況下呈現全白底以呈現最亮的效果。

    -   Title      : 對齊與右到左書寫支援
        Anchor     : Header
        Description: |
            在某些國家書寫方式為右到左（又稱 RTL）而以往的 Tocas 是不支援這種撰寫方式的，

            因為樣式都被寫死成左、右，這就像一個「錯誤按鈕」被寫死成「紅色按鈕」，倘若要更改顏色就必須更改整個介面設計，

            而這個問題在 Tocas 4 中得到改善，因為所有的置左、置右都被改名為「置起始」或「置結束」位置，

            這就像 CSS 的 Flexbox 有個 `flex-start` 或 `flex-end` 一樣，起始或結束的位置會因為不同的偏好設定而動態改變。

    -   Title      : Web Component
        Anchor     : Header
        Description: |
            從 Tocas 4 的設計起始至釋出日期已經過了約兩年，在這期間有許多變化。變化最大的在於使用方式，

            樣式從原先的 HTML 解構與一堆 `<div>` 包裝成了一個又一個的 Web Component（網頁元件），

            這能令使用者更快速地使用而不需要重複寫下冗餘的 HTML 結構且可以更方便地容納 JavaScript 模組程式碼。

            但這麼做也帶來了壞處，那就是使用者將無法過度客製、自訂化一個元件的樣式與排版格局，但這某部份也符合了 Tocas 4 的目標。

            在以往 Tocas 2 總是被以奇怪的方式使用著，而包裝成元件之後便能強迫使用者必須以某種型態來對網頁進行設計。