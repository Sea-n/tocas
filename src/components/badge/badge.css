@import "./badge.variables.css";

/* ==========================================================================
   Base
   ========================================================================== */

.ts.badge {
    box-sizing   : border-box;
    position     : relative;
    display      : inline-block;
    font-size    : var(--ts-badge_font-size);
    font-weight  : var(--ts-badge_font-weight);
    color        : rgb(var(--ts-badge-alias_color, var(--ts-badge_color)));
    line-height  : var(--ts-badge_line-height);
    background   : rgba(var(--ts-badge-alias_background-color, var(--ts-badge_background-color)));
    border-radius: var(--ts-badge_border-radius);
    padding      : var(--ts-badge_vertical-padding) var(--ts-badge_horizontal-padding);
    border       : var(--ts-badge_border-width) solid rgb(var(--ts-badge-alias_border-color, var(--ts-badge_border-color)));
}

/* ==========================================================================
   Structure
   ========================================================================== */

/* ==========================================================================
   Type
   ========================================================================== */

/* ==========================================================================
   States
   ========================================================================== */

/**
 * Disabled
 */

.ts.badge.-disabled {
    opacity: var(--ts-badge_disabled-opacity);
}

/* ==========================================================================
   Variations
   ========================================================================== */

/**
 * Basic
 */

.ts.badge.-basic {
    --ts-badge-alias_background-color: var(--ts-badge-default_background-color);
    --ts-badge-alias_color           : var(--ts-badge_basic-color);
}

/**
 * Outlined
 */

.ts.badge.-outlined {
    --ts-badge-alias_background-color: 0, 0, 0, 0;
    --ts-badge-alias_color           : var(--ts-badge_outlined-color);
    --ts-badge-alias_border-color    : var(--ts-badge_outlined-border-color);
}

/**
 * Empty
 */

.ts.badge.-empty {
}

/**
 * Circular
 */

.ts.badge.-circular {
    border-radius: var(--ts-badge_border-radius-circular);
}

/**
 * Compact
 */

.ts.badge.-compact {
}

/**
 * Corner Floated
 */

.ts.badge.-top-right-floated,
.ts.badge.-top-left-floated,
.ts.badge.-bottom-right-floated,
.ts.badge.-bottom-left-floated {
    position: absolute;
    margin  : 0;
}

.ts.badge.-top-left-floated {
    top      : 0;
    left     : 0;
    transform: translate(
        calc(var(--ts-badge_corner-floated-offset) * -1),
        calc(var(--ts-badge_corner-floated-offset) * -1)
    );
}
.ts.badge.-top-right-floated {
    top      : 0;
    right    : 0;
    transform: translate(var(--ts-badge_corner-floated-offset), calc(var(--ts-badge_corner-floated-offset) * -1));
}
.ts.badge.-bottom-left-floated {
    bottom   : 0;
    left     : 0;
    transform: translate(calc(var(--ts-badge_corner-floated-offset) * -1), var(--ts-badge_corner-floated-offset));
}
.ts.badge.-bottom-right-floated {
    bottom   : 0;
    right    : 0;
    transform: translate(var(--ts-badge_corner-floated-offset), var(--ts-badge_corner-floated-offset));
}

/** Circular Image Offset */
.ts.image.-circular .ts.badge.-top-right-floated,
.ts.image.-circular .ts.badge.-top-left-floated,
.ts.image.-circular .ts.badge.-bottom-right-floated,
.ts.image.-circular .ts.badge.-bottom-left-floated {
    --ts-badge_corner-floated-offset: 25%;
}

/**
 * Floated
 */

.ts.badge.-left-floated {
}
.ts.badge.-right-floated {
}

/**
 * Sizes
 */

.ts.badge.-mini {
}
.ts.badge.-tiny {
}
.ts.badge.-small {
}
.ts.badge.-large {
}
.ts.badge.-big {
}
.ts.badge.-huge {
}
.ts.badge.-massive {
}
