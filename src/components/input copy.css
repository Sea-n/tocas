.ts.input {
    --block_border-radius        : var(--default__block_border-radius);
    --block_border-color         : var(--default__block_border-color);
    --block_padding              : var(--default__block_padding);
    --block_focus-border-color   : var(--default__block_focus-border-color);
    --block_focus-outline-color  : var(--default__block_focus-outline-color);
    --block_hover-border-color   : var(--default__block_hover-border-color);
    --block_disabled-border-color: var(--default__block_disabled-border-color);

    --element_font-size       : var(--default__element_font-size);
    --element_vertical-padding: var(--default__element_vertical-padding);
    --element_color           : var(--default__typography_color);

    --typography_disabled-color   : var(--default__typography_disabled-color);
    --typography_placeholder-color: var(--default__typography_placeholder-color);
    --typography_description-color: var(--default__typography_description-color);
}

.ts.input {
    display      : inline-block;
    border       : 1px solid var(--block_border-color);
    border-radius: var(--block_border-radius);
    font-size    : var(--element_font-size);
    color        : var(--element_color);
    overflow     : hidden;
    transition   : box-shadow .05s ease-in-out, border .05s ease-in-out;
}

.ts.input input,
.ts.input textarea {
    outline       : none;
    box-shadow    : none;
    vertical-align: top;
    border        : 0;
    padding       : var(--element_vertical-padding) var(--block_padding);
    font-family   : var(--global_font-family);
    line-height   : var(--typography_line-height);
    font-size     : 1em;
    color         : var(--element_color);
    resize        : none;
    background    : transparent;
    width         : 100%;
    box-sizing    : border-box;
}

.ts.input:hover {
    border-color: var(--block_hover-border-color);
}

.ts.input:focus-within {
    border-color: var(--block_focus-border-color);
    box-shadow  : 0 0 0 2px var(--block_focus-outline-color);
    outline     : none;
}

.ts.input input::placeholder,
.ts.input textarea::placeholder {
    color: var(--typography_placeholder-color);
}

/* ==========================================================================
   Structure
   ========================================================================== */

.ts.input .header {
    font-weight: 500;
}

.ts.input .header,
.ts.input .description {
    font-size: 14px;
    padding  : var(--element_vertical-padding) var(--block_padding);
    color    : var(--typography_description-color);
}

.ts.input .description {
    color: var(--typography_description-color);
}

.ts.input .header + textarea,
.ts.input .header + input {
    padding-top   : 0;
    padding-bottom: 0;
}

/* ==========================================================================
   Variations
   ========================================================================== */

.ts.input {

}

/**
 * Resizable
 */

.ts.input.-resizable textarea {
    resize: vertical;
}

/**
 * Basic
 */

.ts.input.-basic {
    border: 0;
}

/**
 * Underlined
 */

.ts.input.-underlined {
    border       : 0;
    border-radius: 0;
    border-bottom: 1px solid var(--block_border-color);
}

.ts.input.-underlined:hover {
    border-color: var(--block_hover-border-color);
}

.ts.input.-underlined:focus-within {
    border       : 0;
    box-shadow   : none;
    border-bottom: 1px solid var(--block_focus-border-color);
    box-shadow   : inset 0px -11px 0px -10px var(--block_focus-border-color);
}

/**
 * Circular
 */

.ts.input.-circular {
    border-radius: 10em
}

/**
 * Centered
 */

.ts.input.-centered {
    margin : 0 auto;
    display: block;
    width  : fit-content;
}

/**
 * Fluid
 */

.ts.input.-fluid {
    width: 100%;
}

/**
 * Disabled
 */

.ts.input.-disabled {
    border-color  : var(--block_disabled-border-color) !important;
    color         : var(--typography_disabled-color)   !important;
    pointer-events: none;
}

.ts.input.-disabled input,
.ts.input.-disabled textarea,
.ts.input.-disabled .header,
.ts.input.-disabled .description {
    color         : var(--typography_disabled-color) !important;
    pointer-events: none;
}

.ts.input input[disabled],
.ts.input textarea[disabled] {
    color         : var(--typography_disabled-color)   !important;
    pointer-events: none;
}

/**
 * Icon
 */

.ts.input.-left-icon,
.ts.input.-right-icon {
    display: inline-flex;
}

.ts.input.-left-icon input,
.ts.input.-left-icon textarea {
    padding-left: 0;
}

.ts.input.-right-icon input,
.ts.input.-right-icon textarea {
    padding-right: 0;
}

.ts.input.-left-icon > i.icon,
.ts.input.-right-icon > i.icon {
    padding  : var(--element_vertical-padding) var(--block_padding);
    font-size: 15px;
    color    : #999;
}

.ts.input.-left-icon:focus-within > i.icon,
.ts.input.-right-icon:focus-within > i.icon {
    color    : #777;
}

.ts.input.-left-icon > i.icon {
    padding-right: calc(var(--block_padding) / 1.5);
}

.ts.input.-right-icon > i.icon {
    padding-left: calc(var(--block_padding) / 1.5);
}

.ts.input.-left-icon > i.icon + i.icon,
.ts.input.-right-icon > i.icon + i.icon {
    padding-left: 0;
}