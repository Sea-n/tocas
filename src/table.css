/* ==========================================================================
   Variables
   ========================================================================== */

/* ==========================================================================
   Base
   ========================================================================== */

.ts-table,
.ts-table :is(thead, tbody, tfoot, tr, th, td) {
    width: auto;
    height: auto;
    margin: 0;
    padding: 0;
    border: none;
    border-collapse: collapse;
    border-spacing: 0;
    border-color: inherit;
    vertical-align: inherit;
    text-align: left;
    font-weight: inherit;

    -webkit-border-horizontal-spacing: 0;
    -webkit-border-vertical-spacing: 0;
}

.ts-table {
    width: 100%;
}

/* ==========================================================================
   Structure
   ========================================================================== */

.ts-table thead tr {
    border-bottom: 1px solid var(--gray-300);
}

.ts-table tfoot tr {
    border-top: 1px solid var(--gray-300);
}

.ts-table tr th {
    background: var(--gray-100);
}

.ts-table :is(thead, tfoot) tr th {
    padding: 0.5rem 1rem;
    color: var(--gray-500);
    font-weight: 500;
}

.ts-table tbody tr + tr {
    border-top: 1px solid var(--gray-300);
}

.ts-table tbody tr td {
    padding: 0.5rem 1rem;
    color: var(--gray-700);
}

/* ==========================================================================
   Variations
   ========================================================================== */

/**
 * Sizes
 */

.ts-table.is-tiny {
    font-size: var(--absolute-tiny);
}
.ts-table.is-small {
    font-size: var(--absolute-small);
}
.ts-table.is-large {
    font-size: var(--absolute-large);
}
.ts-table.is-big {
    font-size: var(--absolute-big);
}
.ts-table.is-huge {
    font-size: var(--absolute-huge);
}

/**
 * Collapsed
 */

.ts-table.is-collapsed {
    width: auto;
}

.ts-table :is(th, td).is-collapsed {
    width: 1px;
    white-space: nowrap;
}

/**
 * Truncated
 */

.ts-table.is-truncated td {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/**
 * Basic
 */

.ts-table:is(.is-basic, .is-very-basic) tr th {
    background: transparent;
}
.ts-table.is-very-basic tbody :is(th, td, tr) {
    border-color: transparent;
}

/**
 * Definition
 */

.ts-table.is-definition tr th:not(:first-child) {
    background: var(--gray-100);
}
.ts-table.is-definition tr th:first-child {
    background: transparent;
}

.ts-table.is-definition tr td:first-child {
    background: var(--gray-100);
}

/**
 * Celled
 */

.ts-table.is-celled tr :is(td, th):not(:last-child) {
    border-right: 1px solid var(--gray-300);
}

/**
 * Striped
 */

.ts-table.is-striped > tbody > tr:nth-child(even) {
    background: var(--gray-75);
}

/**
 * Empty
 */

.ts-table td.is-empty {
    color: var(--gray-300);
    font-weight: 500;
}

.ts-table td.is-empty::after {
    content: "â€”";
}

/**
 * Aligns
 */

.ts-table :is(tr, th, td).is-start-aligned {
    text-align: left;
}

.ts-table :is(th, td).is-center-aligned {
    text-align: center;
}

.ts-table :is(th, td).is-end-aligned {
    text-align: right;
}

.ts-table :is(th, td).is-top-aligned {
    vertical-align: top;
}

.ts-table :is(th, td).is-middle-aligned {
    vertical-align: middle;
}

.ts-table :is(th, td).is-bottom-aligned {
    vertical-align: bottom;
}

/**
 * Secondary
 */

.ts-table :is(tr, tr th, tr td).is-secondary {
    background: var(--gray-100);
}
